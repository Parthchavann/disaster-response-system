apiVersion: apps/v1
kind: Deployment
metadata:
  name: disaster-response-backend
  namespace: disaster-response
  labels:
    app: disaster-response-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: disaster-response-backend
  template:
    metadata:
      labels:
        app: disaster-response-backend
    spec:
      containers:
      - name: backend
        image: disaster-response/backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: disaster-response-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: disaster-response-config
              key: REDIS_HOST
        - name: QDRANT_HOST
          valueFrom:
            configMapKeyRef:
              name: disaster-response-config
              key: QDRANT_HOST
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: disaster-response-backend-service
  namespace: disaster-response
spec:
  selector:
    app: disaster-response-backend
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP