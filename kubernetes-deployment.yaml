# NEXUS Enterprise Kubernetes Deployment
apiVersion: v1
kind: Namespace
metadata:
  name: nexus-enterprise
---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus-config
  namespace: nexus-enterprise
data:
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"
  REDIS_HOST: "redis-service"
  QDRANT_HOST: "qdrant-service"
  POSTGRES_HOST: "postgres-service"
---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: nexus-secrets
  namespace: nexus-enterprise
type: Opaque
data:
  postgres-password: bmV4dXNfcGFzc3dvcmQ=  # nexus_password base64 encoded
  openai-api-key: eW91cl9vcGVuYWlfa2V5X2hlcmU=  # your_openai_key_here base64 encoded
---
# NEXUS Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-app
  namespace: nexus-enterprise
  labels:
    app: nexus-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nexus-app
  template:
    metadata:
      labels:
        app: nexus-app
    spec:
      containers:
      - name: nexus-app
        image: nexus-enterprise:latest
        ports:
        - containerPort: 8509
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: nexus-config
        - secretRef:
            name: nexus-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /events
            port: 8509
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /events
            port: 8509
          initialDelaySeconds: 5
          periodSeconds: 5
---
# NEXUS Service
apiVersion: v1
kind: Service
metadata:
  name: nexus-service
  namespace: nexus-enterprise
spec:
  selector:
    app: nexus-app
  ports:
  - name: http
    port: 80
    targetPort: 8509
  - name: metrics
    port: 8000
    targetPort: 8000
  type: LoadBalancer
---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: nexus-enterprise
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: nexus-enterprise
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
# Qdrant Vector Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qdrant
  namespace: nexus-enterprise
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qdrant
  template:
    metadata:
      labels:
        app: qdrant
    spec:
      containers:
      - name: qdrant
        image: qdrant/qdrant:latest
        ports:
        - containerPort: 6333
        - containerPort: 6334
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: qdrant-storage
          mountPath: /qdrant/storage
      volumes:
      - name: qdrant-storage
        persistentVolumeClaim:
          claimName: qdrant-pvc
---
# Qdrant Service
apiVersion: v1
kind: Service
metadata:
  name: qdrant-service
  namespace: nexus-enterprise
spec:
  selector:
    app: qdrant
  ports:
  - name: http
    port: 6333
    targetPort: 6333
  - name: grpc
    port: 6334
    targetPort: 6334
---
# Qdrant PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qdrant-pvc
  namespace: nexus-enterprise
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Kafka Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: nexus-enterprise
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.4.0
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-service:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
---
# Kafka Service
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: nexus-enterprise
spec:
  selector:
    app: kafka
  ports:
  - port: 9092
    targetPort: 9092
---
# Zookeeper Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: nexus-enterprise
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Zookeeper Service
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: nexus-enterprise
spec:
  selector:
    app: zookeeper
  ports:
  - port: 2181
    targetPort: 2181
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus-ingress
  namespace: nexus-enterprise
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: nexus.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nexus-service
            port:
              number: 80
---
# HorizontalPodAutoscaler for auto-scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nexus-hpa
  namespace: nexus-enterprise
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nexus-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80